services:
  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    restart: unless-stopped
    environment:
      - MYSQL_DATABASE=apptimus-db
      - MYSQL_ROOT_PASSWORD=secret
      - MYSQL_PASSWORD=secret
    ports:
      - "3306:3306"
    networks:
      - backend_net
    command: [ "mysqld", "--skip-networking=0", "--bind-address=0.0.0.0" ]
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - apptimus_mysql_data:/var/lib/mysql

  go-backend:
    build:
      context: .
      dockerfile: ./backend/dockerfile.dev
    container_name: go-backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    env_file:
      - backend/.env
    networks:
      - backend_net
    volumes:
      - shared_json:/app/public/data
    depends_on:
      mysql_db:
        condition: service_healthy

  next_frontend:
    container_name: next_frontend
    build:
      context: ./frontend
      dockerfile: dockerfile.dev
    ports:
      - "2000:3000"
    networks:
      - backend_net
    volumes:
      # - ./frontend:/app
      - /app/node_modules
      - shared_json:/app/public/data
      # - nextjs_build:/app/out

      # nginx:
      #   image: 'nginx:stable-alpine'
      #   ports:
      #     - "2000:2000"
      #   volumes:
      #     - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      #     # - ./frontend/out:/usr/share/nginx/html:ro
      #     - nextjs_build:/usr/share/nginx/html:ro
      #   depends_on:
      #     - next_frontend
      #     - go-backend
      #   networks:
      #     - backend_net

networks:
  backend_net:
    driver: bridge

volumes:
  apptimus_mysql_data:
  shared_json:
    # nextjs_build:


